// simpletest-client.mjs
import { Client } from "@modelcontextprotocol/sdk/client/index.js";
import { SSEClientTransport } from "@modelcontextprotocol/sdk/client/sse.js";

const SERVER_URL = "http://localhost:3000/api/sse";

async function testSimpleMcp() {
  console.log(`🔌 Connecting to: ${SERVER_URL}`);

  const transport = new SSEClientTransport(new URL(SERVER_URL));
  const client = new Client(
    { name: "simple-test-client", version: "1.0.0" },
    { capabilities: {} }
  );

  try {
    await client.connect(transport);
    console.log("✅ Connected successfully!");

    // Test 1: List available resources
    console.log("\n📚 Testing resources...");
    const resourcesResult = await client.listResources();
    console.log(
      "Available resources:",
      resourcesResult.resources?.map((r) => r.name) || []
    );

    // Test 2: Read the hello resource
    console.log("\n🧪 Testing hello resource...");
    try {
      const helloResult = await client.readResource({ uri: "genz://hello" });
      console.log("✅ Hello resource result:", helloResult.contents[0].text);
    } catch (err) {
      console.error("❌ Hello resource failed:", err.message);
    }

    // Test 3: List available tools
    console.log("\n🔧 Testing tools...");
    const toolsResult = await client.listTools();
    console.log(
      "Available tools:",
      toolsResult.tools?.map((t) => t.name) || []
    );

    // Test 4: Call the generate_html tool
    console.log("\n🧪 Testing generate_html tool...");
    try {
      const toolResult = await client.callTool({
        name: "generate_html",
        arguments: {
          title: "My Test Page",
          content: "This is generated by the MCP server!",
        },
      });
      console.log("✅ HTML generated successfully!");
      console.log(
        "First 200 chars:",
        toolResult.content[0].text.substring(0, 200) + "..."
      );
    } catch (err) {
      console.error("❌ generate_html tool failed:", err.message);
    }

    console.log("\n🎉 All tests completed!");
  } catch (err) {
    console.error("❌ Connection failed:", err.message);
  } finally {
    await client.close();
  }
}

testSimpleMcp().catch(console.error);
